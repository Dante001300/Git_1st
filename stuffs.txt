Trissmerigold13!

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

lsb_release -a				ubuntu version
uname -m 				to check linux(x64) or linux(arm64) (x86_64 is x64)
cd ~					home directory

git remote --verbose
git config user.name
dpkg --list				list all package
sudo apt-get remove filename		uninstall file

rm -rf filename				to force remove

-----------------------------------------------------Mongodb--------------------------------------
			install mongo

sudo dpkg -i mongodb.deb					to install
sudo systemctl status mongod					check status
sudo systemctl start mongod					to start mongod service
sudo dpkg -i mongodb-mongosh_1.9.1_amd64.deb 			install mongo shell
mongosh								check the staus of mongo shell 
sudo dpkg -i mongodb-compass_1.37.0_amd64.deb 			Install mongo GUI(graphic user interface)
mongodb-compass							to start mongodb GUI
pkill -f node							to kill and reset terminal inside nodeJS


					uninstall mongo

Type the following commands one by one to uninstall MongoDB:

Stop MongoDB process: sudo service mongod stop

Completely remove the installed MongoDB packages: sudo apt-get purge mongodb-org*

Remove the data directories, MongoDB database(s), and log files: sudo rm -r /var/log/mongodb /var/lib/mongodb

To check if MongoDB is successfully uninstalled, type: service mongod status

-----------------------------------------------------Mongodb--------------------------------------

-----------------------------------------------------Robo 3T--------------------------------------

sudo apt update			(optional)
sudo apt install snapd		(optional)
sudo snap install robo3t-snap
robo3t-snap

-----------------------------------------------------Robo 3T--------------------------------------

-----------------------------------------------------snap--------------------------------------
snap make it easier to install software on ubuntu
sudo snap install snap-store
-----------------------------------------------------snap--------------------------------------

-----------------------------------------------------Postman--------------------------------------
snap install postman

to open postman --> type in postman in terminal

-----------------------------------------------------Postman--------------------------------------

------------------------------------------------Ubuntu------------------------------------------
sudo apt-get update
sudo apt-get upgrade
sudo apt --fix-broken install
sudo apt install google-chrome-stable              // this is to update chrome

-----------------------------------Git only-----------------------------------------------------
git --version						check version
git status						staging area

git add README.md					to add name of file
git add . 						to add everything
git rm --cached	filename				remove all files from the staging area(unstracked)

git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Dante001300/All.git
git push -u origin main

			------------------------------------------------------
			
git log							to see all the commit and its date/time, author
git log --oneline					better to see all logs

git checkout IDofCommit(from git log)			go back in time to previous commit
git checkout master					go back into the future(to the lastest commit)

git revert IDofcommit					go back in time to 1 commit only 
git checkout master + git revert ID0frevertedID		to revert a revert(first go to master then git revert ID from log)

get reset --hard IDname					reset to the commitID(permanently)

touch .gitignore					create a file name .gitignore (to a file we want)
	inside .gitignore type in the file name to ignore that file hence untrack it
git rm -r -cached					if git ignore doesn't work try this line it will remove all the cached
foldername/*						to ignore an entire folder and its contents(inside .gitignore)

To remove git init ----> rm -rf .git

---------------------------------------github---------------------------------after created a repository
git init						go to source folder of the project(this will create .git file)
git remote add origin https://github.com/Dante001300/Git_1st.git		this is the https url
git remote -v						to check if git remote works (should have fetch and push)
git pull origin master					to pull files from github(git pull is enough is it remember the brand)
git pull origin main					if the above code does not work 
type q or z to exit git log when stuck

------------git push using SSH(secure socket shell)----https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key and-adding-it-to-the-ssh-agent
				
				Generating a new SSH key
ls -al ~/.ssh 						to see if existing SSH keys are present.
ssh-keygen -t ed25519 -C "tdante95@gmail.com"		generate ssh key

				Adding your SSH key to the ssh-agent
eval "$(ssh-agent -s)"					Start the ssh-agent in the background.
ssh-add ~/.ssh/id_ed25519				Add your SSH private key to the ssh-agent.
cat ~/.ssh/id_ed25519.pub				to open the file that has the ssh key to copy it to the clipboard
git push -u origin master or main			-u to remember the brand so next time just type git push



